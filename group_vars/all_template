#########################
## General configuration
#########################

percona_key_location: https://repo.percona.com/yum/PERCONA-PACKAGING-KEY
percona_repo: https://repo.percona.com/yum/percona-release-latest.noarch.rpm

# MongoDB version as per "percona-release". Availability of MongoDB versions depend on the OS version.
# This is the version you are upgrading into, all you need to do is enter the major verion number below
# e.g. -> Available repositories: Any repo starting from psmdb-60. This means we support automated upgrades for clusters running at least MongoDB 5.0
mongodb_version: 7
percona_release: "psmdb-{{mongodb_version}}0"

# packages and router_packages lists 
# you can use a specific version instead of the default `latest` by passing the package names and version e.g. percona-server-mongodb-7.0.12-7.el9
# Please note there has been a pmm-client package naming convention change for pmm. If using pmm2, the client package name is pmm2-client
# if using pmm3, the client package name is pmm-client
packages:
  - percona-server-mongodb
  - percona-backup-mongodb
  - pmm-client

router_packages:
  - percona-server-mongodb-mongos 
  - percona-mongodb-mongosh
  - pmm-client


#####################
# MongoDB admin user
#####################

mongo_root_user: your_mongodb_user
mongo_root_password: your_mongodb_password


##################
## Authentication
##################

# use_tls: true/false. Controls if Mongo uses keyfile or x509 certificates for member authentication. Also controls if clients need to use TLS to connect.
use_tls: false

# The next 2 options are only relevant if use_tls: true
certificateKeyFile: /etc/ssl/test-server.pem
CAFile: /etc/ssl/test-ca.pem


##################
## Monitoring
##################

# What repo to use
pmm_client_repo: pmm2-client
#pmm_client_repo: pmm3-client

###############
## Backup
###############

# If set to true, we take a backup of the config database for sharded clusters. Default is false
# https://www.mongodb.com/docs/v7.0/release-notes/7.0-upgrade-sharded-cluster/#back-up-the-config-database
backup_cfg: false

# PBM is used to take the backup of the config 
pbmuser: your_pbm_user
pbmpwd: your_pbm_password

# Path where cfg mongodump backups are stored
backup_dir: "/tmp/backup" 